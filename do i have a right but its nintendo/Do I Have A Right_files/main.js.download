$(document).ready(function () {
    $(window).keydown(function (e) {
        if (e.target === document.body && (e.keyCode == 9 || e.keyCode == 8)) {
            // 9 is tab, 8 is backspace
            e.preventDefault();
        }
    });
});

function getGameConfig() {
    if (window && window.parent && window.parent.icivics) {
        SendMessage("iCivicsConnector", "SetGameConfig", JSON.stringify(window.parent.icivics.getGameConfig()));
    }
}

function getWebConfig() {
	if (window && window.parent && window.parent.game_stats) {
		SendMessage("iCivicsConnector", "LoadConfig_Success", JSON.stringify(window.parent.game_stats.getGameConfig()));
	} else {
		console.log("An attempt to retrieve config failed.");
		SendMessage("iCivicsConnector", "LoadConfig_Failure", "No iCivics config found.");
	}
}

function goToLogin() {
    if (window && window.parent && window.parent.icivics) {
        window.parent.icivics.displayLogin();
    } else {
        console.log("An attempt to go to the login page failed");
    }
}

function goToRegister() {
    if (window && window.parent && window.parent.icivics) {
        window.parent.icivics.displayRegister();
    } else {
        console.log("An attempt to go to the register page failed");
    }
}

function printImage(base64Image) {
    var printable = window.open();
	if (printable != null) {
		printable.document.open();
		printable.document.write("<style type=\"text/css\" media = \"print\"> @page {} </style><img src=\"data:image/png;base64," + base64Image + "\" onload=\"window.print()\"></img>");
		printable.document.close();
	} else {
		alert('This game uses a popup to print the certificate, please disable the popup blocker to print.');
	}
}

function SendMessage(target, message, argument) {
    window.gameInstance.SendMessage(target, message, argument);
}

function logGAEvent(eventName) {
	if (window && window.parent && window.parent.dataLayer) {
		window.parent.dataLayer.push({'event': eventName});
	}
}

function logGAEventWithParam(eventName, paramName, paramValue) {
	if (window && window.parent && window.parent.dataLayer) {
		window.parent.dataLayer.push({'event': eventName, paramName: paramValue});
	}
}